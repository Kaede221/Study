public class SpecialCode {
    /*
     * 原码 反码 补码
     * 原码 其实就是一个数据的二进制数据 前面是符号, 后面是数据
     * 8bit一组 一个字节 -> 一个字节的最大值是127 -> 0111 1111, 最小值-127, 就是1111 1111
     * 但是存在一些问题 1000 0001转换就是-2了 -> 原码的负数操作会有一个问题
     *
     * 于是就有了反码 用来解决这个问题
     * 反码就是原码的修正, 正数的反码不变, 负数的会变成正常的!
     * */
    public static void main(String[] args) {
        /* 其他运算符
         * 这里就出现了新的运算符
         * & 逻辑与
         * << 左移运算
         * >> 右移运算
         * >>> 无符号右移运算
         * */

        // 先补码 1100 1000 & 0000 1010
        // 每一个位置都会比较, 有一个false 就是一个false, 只有都是1的时候, 才是true
        // 这样子就会得到0000 1000 -> 转换过来就是8
        System.out.println(200 & 10);

        // 逻辑或也是一样的
        System.out.println(200 | 10);

        // 左移, 就是往左边移动两次, 也就是后面补两个0
        // 口诀就是, 左移一次, 乘2, 两次乘4, 三次乘6
        System.out.println(200 << 2);

        // 右移一样
        // 右移一次, 就是除以2, 两次就是除以4
        System.out.println(200 >> 2);
    }
}
